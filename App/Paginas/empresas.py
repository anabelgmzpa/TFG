import streamlit as st
import Analisis.helpers as h

def main():
    # Configuraci√≥n de la p√°gina
    st.set_page_config(page_title="Selecci√≥n de caracter√≠sticas de la empresa")

    # Menu de navegaci√≥n
    paginas = {
        "Selecci√≥n de indicadores": h.menu1(),
        "Selecci√≥n de caracter√≠sticas de la empresa": h.menu2(),
        "Confirmar selecci√≥n": "3Ô∏è‚É£"
    }
    for pag, icono in paginas.items():
        if st.sidebar.button(f"{pag}", icon= icono):
            st.session_state["pag_actual"] = pag
            st.rerun()
    st.sidebar.divider()
    if st.session_state["user_act"] != "Anonimo":
        out= "Cerrar Sesi√≥n"
        if st.sidebar.button("Inicio", icon="üè†"):
            st.session_state["pag_actual"] = "Home"
            st.rerun()
    else:
        out= "Salir"
    if st.sidebar.button(f":red[{out}]", icon="‚ùå"):
        st.session_state["pag_actual"] = "Inicio"
        st.rerun()

    # Logo de la aplicaci√≥n
    st.logo("Paginas/Logo.png", size="large")

    # T√≠tulo de la p√°gina
    st.markdown("<style>.block-container {padding-top: 1.8rem;}</style>", unsafe_allow_html=True)
    st.markdown("<h1 style='text-align: center;'>Selecci√≥n de caracter√≠sticas de la empresa</h1>", unsafe_allow_html=True)

    # Variable local auxiliar
    aux_sector = None
    aux_tama√±o = None
    aux_tipo = None
    aux_ambito = None
    aux_importacion = None
    aux_exportacion = None
    aux_sostenibilidad = None
    aux_sexo = None
    aux_edad = None
    aux_creencias = None

    with st.container(height= 450):
        # Caracter√≠stca SECTOR  
        sectores= ["Agricultura, ganader√≠a, silvicultura y pesca",
                    "Audiovisual",
                    "Comercio al por mayor y al por menor",
                    "Construcci√≥n",
                    "Defensa",
                    "Educaci√≥n",
                    "Energ√≠a",
                    "Industrial",
                    "Sanidad",
                    "Servicios financieros",
                    "Tecnolog√≠a",
                    "Transporte (tambi√©n p√∫blico) y log√≠stica",
                    "Turismo y ocio"]
        if st.session_state["sector_emp"] != None:
            aux_sector= st.pills("Sector:", sectores, selection_mode="single", default= st.session_state["sector_emp"]) 
        else:
            aux_sector= st.pills("Sector:", sectores, selection_mode="single")

        # Caracter√≠stca TAMA√ëO 
        tama√±os= ["PyME (<250 empleados)",
                "Grande (>250 empleados)"]
        if st.session_state["tama√±o_emp"] != None:
            aux_tama√±o= st.pills("Tama√±o:", tama√±os, selection_mode="single", default=st.session_state["tama√±o_emp"], key="tama√±o_pills_seleccionado")
        else:
            aux_tama√±o= st.pills("Tama√±o:", tama√±os, selection_mode="single", key="tama√±o_pills")

        # Caracter√≠stca PROPIEDAD DEL CAPITAL
        tipos= ["P√∫blica",
                "Privada"]
        if st.session_state["tipo_emp"] != None:
            aux_tipo= st.pills("Propiedad del capital:", tipos, selection_mode="single", default= st.session_state["tipo_emp"], key="tipo_pills_seleccionado")
        else:
            aux_tipo= st.pills("Propiedad del capital:", tipos, selection_mode="single", key="tipo_pills")

        # Caracter√≠stca √ÅMBITO GEOGR√ÅFICO
        ambitos= ["Nacional",
                "Internacional"]
        if st.session_state["ambito_emp"] != None:
            aux_ambito= st.pills("√Åmbito geogr√°fico:", ambitos, selection_mode="single", default= st.session_state["ambito_emp"], key="ambito_pills_seleccionado")
        else:
            aux_ambito= st.pills("√Åmbito geogr√°fico:", ambitos, selection_mode="single", key="ambito_pills")

        # Caracter√≠stca NECESIDAD DE IMPORTACI√ìN
        importacion= ["Nada",
                    "Baja",
                    "Alta"]
        if st.session_state["importacion_emp"] != None:
            aux_importacion = st.pills("Necesidad de importaci√≥n:", importacion, selection_mode="single", default= st.session_state["importacion_emp"], key="importacion_pills_seleccionado")
        else:
            aux_importacion = st.pills("Necesidad de importaci√≥n:", importacion, selection_mode="single", key="importacion_pills")

        # Caracter√≠stca CAPACIDAD DE EXPORTACI√ìN
        exportacion= ["Nada",
                    "Baja",
                    "Alta"]
        if st.session_state["exportacion_emp"] != None:
            aux_exportacion = st.pills("Capacidad de exportaci√≥n:", exportacion, selection_mode="single", default= st.session_state["exportacion_emp"], key="exportacion_pills_seleccionado")
        else:
            aux_exportacion = st.pills("Capacidad de exportaci√≥n:", exportacion, selection_mode="single", key="exportacion_pills")

        # Caracter√≠stca SOSTENIBILIDAD
        sostenibilidad= ["Baja",
                        "Alta"]
        if st.session_state["sostenibilidad_emp"] != None:
            aux_sostenibilidad = st.pills("Sostenibilidad:", sostenibilidad, selection_mode="single", default= st.session_state["sostenibilidad_emp"], key="sostenibilidad_pills_seleccionado")
        else:
            aux_sostenibilidad = st.pills("Sostenibilidad:", sostenibilidad, selection_mode="single", key="sostenibilidad_pills")

        # Caracter√≠stca CLIENTE OBJETIVO
        st.write(" ")
        st.write("**Cliente objetivo**")
        # Sexo
        sexo= ["Irrelevante",
                        "Masculino",
                        "Femenino"]
        if st.session_state["sexo_emp"] != None:
            aux_sexo = st.pills("Sexo:", sexo, selection_mode="single", default= st.session_state["sexo_emp"], key="sexo_pills_seleccionado")
        else:
            aux_sexo = st.pills("Sexo:", sexo, selection_mode="single", key="sexo_pills")
        # Edad
        edad = ["Irrelevante",
            "-18 a√±os",
            "18 - 24 a√±os",
            "25 - 49 a√±os",
            "50 - 64 a√±os",
            "+65 a√±os"]
        if st.session_state["edad_emp"] != None:
            aux_edad = st.pills("Edad:", edad, selection_mode="single", default=st.session_state["edad_emp"], key="edad_pills_seleccionado")
        else:
            aux_edad = st.pills("Edad:", edad, selection_mode="single", key="edad_pills")
        # Creencias
        creencias = ["Irrelevante",
                "Ateos",
                "Cristianos",
                "Musulmanes"]
        if st.session_state["creencias_emp"] != None:
            aux_creencias = st.pills("Creencias:", creencias, selection_mode="single", default=st.session_state["creencias_emp"], key="creencias_pills_seleccionado")
        else:
            aux_creencias = st.pills("Creencias:", creencias, selection_mode="single", key="creencias_pills")


    # Bot√≥n para guardar la selecci√≥n de indicadores 
    col1, col2 = st.columns([2, 1], vertical_alignment="center")
    with col1:
        container_error = st.container()
    with col2:
        if st.button("Guardar selecci√≥n", type="primary"):
            if aux_sector != None and aux_tama√±o != None and aux_tipo != None and aux_ambito != None and aux_importacion != None and aux_exportacion != None and aux_sostenibilidad != None and aux_sexo != None and aux_edad != None and aux_creencias != None:
                st.session_state["sector_emp"] = aux_sector
                st.session_state["tama√±o_emp"] = aux_tama√±o
                st.session_state["tipo_emp"] = aux_tipo
                st.session_state["ambito_emp"] = aux_ambito
                st.session_state["importacion_emp"] = aux_importacion
                st.session_state["exportacion_emp"] = aux_exportacion
                st.session_state["sostenibilidad_emp"] = aux_sostenibilidad
                st.session_state["sexo_emp"] = aux_sexo
                st.session_state["edad_emp"] = aux_edad
                st.session_state["creencias_emp"] = aux_creencias

                st.session_state["pag_actual"] = "Confirmar selecci√≥n"  # Cambiar la p√°gina
                st.session_state["ok_caracteristicas"] = True
                st.rerun()
            else:
                with container_error:
                    st.error("Debes seleccionar una opci√≥n de cada caracter√≠stica")
        
